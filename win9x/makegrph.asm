; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

COMM	grph_table:DWORD:0800H
;	COMDAT pdata
; File h:\projects\vcp\np21w-0.86\vram\makegrph.c
pdata	SEGMENT
$pdata$grphput_all1 DD imagerel grphput_all1
	DD	imagerel grphput_all1+451
	DD	imagerel $unwind$grphput_all1
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grphput_all1 DD 0c2101H
	DD	0b6421H
	DD	0a5421H
	DD	093421H
	DD	0f01d1221H
	DD	0d019e01bH
	DD	07015c017H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT grphput_all1
_TEXT	SEGMENT
mg$ = 0
mkgrph$ = 64
gpos$ = 72
grphput_all1 PROC					; COMDAT
; Line 297
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 16
; Line 308
	mov	rbx, QWORD PTR [rcx+8]
	mov	r11, QWORD PTR [rcx]
; Line 312
	movzx	r12d, BYTE PTR gdc+356
	movsxd	r8, edx
	mov	r15, rcx
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, WORD PTR gdc[r8+rcx+340]
	movzx	edi, WORD PTR gdc[r8+rcx+342]
	mov	QWORD PTR mg$[rsp+8], rbx
	and	eax, 16383				; 00003fffH
	lea	r10d, DWORD PTR [rax+rax]
; Line 313
	bt	edi, 14
	jb	SHORT $LN11@grphput_al
; Line 314
	add	r12d, r12d
$LN11@grphput_al:
; Line 318
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r9d, DWORD PTR mg$[rsp+8]
	shr	edi, 4
	and	edi, 1023				; 000003ffH
	and	r12d, 254				; 000000feH
	shr	rbx, 32					; 00000020H
$LL10@grphput_al:
; Line 320
	test	r9b, 1
	je	SHORT $LN7@grphput_al
	test	BYTE PTR gdc+656, 16
	jne	$LN4@grphput_al
$LN7@grphput_al:
	mov	r14, QWORD PTR mem
; Line 321
	mov	esi, r10d
; Line 322
	mov	rbp, r11
; Line 323
	lea	r13, QWORD PTR [r11+640]
	lea	r15, OFFSET FLAT:__ImageBase
	npad	14
$LL6@grphput_al:
; Line 325
	lea	eax, DWORD PTR [rsi+1736704]
; Line 327
	add	rbp, 8
	movzx	eax, BYTE PTR [rax+r14]
	mov	ecx, DWORD PTR grph_table[r15+rax*8]
	mov	edx, DWORD PTR grph_table[r15+rax*8+4]
	lea	eax, DWORD PTR [rsi+1769472]
	movzx	eax, BYTE PTR [rax+r14]
	add	ecx, DWORD PTR grph_table[r15+rax*8+2048]
	add	edx, DWORD PTR grph_table[r15+rax*8+2052]
	lea	eax, DWORD PTR [rsi+1802240]
	movzx	eax, BYTE PTR [rax+r14]
	add	ecx, DWORD PTR grph_table[r15+rax*8+4096]
	add	edx, DWORD PTR grph_table[r15+rax*8+4100]
	lea	eax, DWORD PTR [rsi+1966080]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+6148]
	mov	eax, DWORD PTR grph_table[r15+rax*8+6144]
	add	ecx, eax
	inc	esi
	mov	DWORD PTR [rbp-4], edx
	mov	DWORD PTR [rbp-8], ecx
	and	esi, 32767				; 00007fffH
; Line 328
	cmp	rbp, r13
	jb	$LL6@grphput_al
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r15, QWORD PTR mkgrph$[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
$LN4@grphput_al:
; Line 330
	mov	eax, r9d
; Line 331
	inc	r9d
	or	BYTE PTR renewal_line[rax+rcx], 2
; Line 332
	cmp	r9d, DWORD PTR dsync+12
	jae	SHORT $LN17@grphput_al
; Line 335
	add	r11, 640				; 00000280H
; Line 336
	dec	edi
; Line 337
	je	SHORT $LN18@grphput_al
; Line 340
	dec	ebx
; Line 341
	jne	$LL10@grphput_al
; Line 343
	add	r10d, r12d
	mov	ebx, r14d
	and	r10d, 32767				; 00007fffH
; Line 345
	jmp	$LL10@grphput_al
$LN18@grphput_al:
; Line 346
	mov	QWORD PTR [r15], r11
; Line 347
	mov	DWORD PTR [r15+8], r9d
; Line 348
	xor	eax, eax
	jmp	SHORT $LN12@grphput_al
$LN17@grphput_al:
; Line 333
	mov	eax, 1
$LN12@grphput_al:
; Line 349
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 16
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
grphput_all1 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grphput_all0 DD imagerel grphput_all0
	DD	imagerel grphput_all0+451
	DD	imagerel $unwind$grphput_all0
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grphput_all0 DD 0c2101H
	DD	0b6421H
	DD	0a5421H
	DD	093421H
	DD	0f01d1221H
	DD	0d019e01bH
	DD	07015c017H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT grphput_all0
_TEXT	SEGMENT
mg$ = 0
mkgrph$ = 64
gpos$ = 72
grphput_all0 PROC					; COMDAT
; Line 243
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 16
; Line 254
	mov	rbx, QWORD PTR [rcx+8]
	mov	r11, QWORD PTR [rcx]
; Line 258
	movzx	r12d, BYTE PTR gdc+356
	movsxd	r8, edx
	mov	r15, rcx
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, WORD PTR gdc[r8+rcx+340]
	movzx	edi, WORD PTR gdc[r8+rcx+342]
	mov	QWORD PTR mg$[rsp+8], rbx
	and	eax, 16383				; 00003fffH
	lea	r10d, DWORD PTR [rax+rax]
; Line 259
	bt	edi, 14
	jb	SHORT $LN11@grphput_al@2
; Line 260
	add	r12d, r12d
$LN11@grphput_al@2:
; Line 264
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r9d, DWORD PTR mg$[rsp+8]
	shr	edi, 4
	and	edi, 1023				; 000003ffH
	and	r12d, 254				; 000000feH
	shr	rbx, 32					; 00000020H
$LL10@grphput_al@2:
; Line 266
	test	r9b, 1
	je	SHORT $LN7@grphput_al@2
	test	BYTE PTR gdc+656, 16
	jne	$LN4@grphput_al@2
$LN7@grphput_al@2:
	mov	r14, QWORD PTR mem
; Line 267
	mov	esi, r10d
; Line 268
	mov	rbp, r11
; Line 269
	lea	r13, QWORD PTR [r11+640]
	lea	r15, OFFSET FLAT:__ImageBase
	npad	14
$LL6@grphput_al@2:
; Line 271
	lea	eax, DWORD PTR [rsi+688128]
; Line 273
	add	rbp, 8
	movzx	eax, BYTE PTR [rax+r14]
	mov	ecx, DWORD PTR grph_table[r15+rax*8]
	mov	edx, DWORD PTR grph_table[r15+rax*8+4]
	lea	eax, DWORD PTR [rsi+720896]
	movzx	eax, BYTE PTR [rax+r14]
	add	ecx, DWORD PTR grph_table[r15+rax*8+2048]
	add	edx, DWORD PTR grph_table[r15+rax*8+2052]
	lea	eax, DWORD PTR [rsi+753664]
	movzx	eax, BYTE PTR [rax+r14]
	add	ecx, DWORD PTR grph_table[r15+rax*8+4096]
	add	edx, DWORD PTR grph_table[r15+rax*8+4100]
	lea	eax, DWORD PTR [rsi+917504]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+6148]
	mov	eax, DWORD PTR grph_table[r15+rax*8+6144]
	add	ecx, eax
	inc	esi
	mov	DWORD PTR [rbp-4], edx
	mov	DWORD PTR [rbp-8], ecx
	and	esi, 32767				; 00007fffH
; Line 274
	cmp	rbp, r13
	jb	$LL6@grphput_al@2
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r15, QWORD PTR mkgrph$[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
$LN4@grphput_al@2:
; Line 276
	mov	eax, r9d
; Line 277
	inc	r9d
	or	BYTE PTR renewal_line[rax+rcx], 1
; Line 278
	cmp	r9d, DWORD PTR dsync+12
	jae	SHORT $LN17@grphput_al@2
; Line 281
	add	r11, 640				; 00000280H
; Line 282
	dec	edi
; Line 283
	je	SHORT $LN18@grphput_al@2
; Line 286
	dec	ebx
; Line 287
	jne	$LL10@grphput_al@2
; Line 289
	add	r10d, r12d
	mov	ebx, r14d
	and	r10d, 32767				; 00007fffH
; Line 291
	jmp	$LL10@grphput_al@2
$LN18@grphput_al@2:
; Line 292
	mov	QWORD PTR [r15], r11
; Line 293
	mov	DWORD PTR [r15+8], r9d
; Line 294
	xor	eax, eax
	jmp	SHORT $LN12@grphput_al@2
$LN17@grphput_al@2:
; Line 279
	mov	eax, 1
$LN12@grphput_al@2:
; Line 295
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 16
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
grphput_all0 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grphput_indirty1 DD imagerel grphput_indirty1
	DD	imagerel grphput_indirty1+458
	DD	imagerel $unwind$grphput_indirty1
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grphput_indirty1 DD 0c2101H
	DD	0b6421H
	DD	0a5421H
	DD	093421H
	DD	0f01d1221H
	DD	0d019e01bH
	DD	07015c017H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT grphput_indirty1
_TEXT	SEGMENT
mg$ = 0
mkgrph$ = 64
gpos$ = 72
grphput_indirty1 PROC					; COMDAT
; Line 187
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 16
; Line 198
	mov	rbp, QWORD PTR [rcx+8]
	mov	rsi, QWORD PTR [rcx]
; Line 202
	movzx	r13d, BYTE PTR gdc+356
	movsxd	r8, edx
	mov	r15, rcx
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, WORD PTR gdc[r8+rcx+340]
	movzx	r12d, WORD PTR gdc[r8+rcx+342]
	mov	QWORD PTR mg$[rsp+8], rbp
	and	eax, 16383				; 00003fffH
	lea	ebx, DWORD PTR [rax+rax]
; Line 203
	bt	r12d, 14
	jb	SHORT $LN12@grphput_in
; Line 204
	add	r13d, r13d
$LN12@grphput_in:
; Line 208
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r11d, DWORD PTR mg$[rsp+8]
	shr	r12d, 4
	and	r12d, 1023				; 000003ffH
	and	r13d, 254				; 000000feH
	shr	rbp, 32					; 00000020H
$LL11@grphput_in:
; Line 210
	test	r11b, 1
	je	SHORT $LN8@grphput_in
	test	BYTE PTR gdc+656, 16
	jne	$LN5@grphput_in
$LN8@grphput_in:
	mov	r14, QWORD PTR mem
; Line 211
	mov	r9d, ebx
; Line 212
	mov	r10, rsi
; Line 213
	lea	rdi, QWORD PTR [rsi+640]
	lea	r15, OFFSET FLAT:__ImageBase
$LL7@grphput_in:
; Line 215
	mov	eax, r9d
	test	BYTE PTR vramupdate[rax+r15], 2
	je	$LN4@grphput_in
; Line 216
	mov	eax, r11d
	or	BYTE PTR renewal_line[rax+r15], 2
; Line 217
	lea	eax, DWORD PTR [r9+1736704]
	movzx	eax, BYTE PTR [rax+r14]
	mov	ecx, DWORD PTR grph_table[r15+rax*8]
	mov	edx, DWORD PTR grph_table[r15+rax*8+4]
	lea	eax, DWORD PTR [r9+1769472]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+2052]
	add	ecx, DWORD PTR grph_table[r15+rax*8+2048]
	lea	eax, DWORD PTR [r9+1802240]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+4100]
	add	ecx, DWORD PTR grph_table[r15+rax*8+4096]
	lea	eax, DWORD PTR [r9+1966080]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+6148]
	mov	eax, DWORD PTR grph_table[r15+rax*8+6144]
	add	ecx, eax
	mov	DWORD PTR [r10+4], edx
	mov	DWORD PTR [r10], ecx
$LN4@grphput_in:
; Line 219
	inc	r9d
; Line 220
	add	r10, 8
	and	r9d, 32767				; 00007fffH
; Line 221
	cmp	r10, rdi
	jb	$LL7@grphput_in
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r15, QWORD PTR mkgrph$[rsp]
$LN5@grphput_in:
; Line 223
	inc	r11d
; Line 224
	cmp	r11d, DWORD PTR dsync+12
	jae	SHORT $LN18@grphput_in
; Line 227
	add	rsi, 640				; 00000280H
; Line 228
	dec	r12d
; Line 229
	je	SHORT $LN19@grphput_in
; Line 232
	dec	ebp
; Line 233
	jne	$LL11@grphput_in
; Line 235
	add	ebx, r13d
	mov	ebp, r14d
	and	ebx, 32767				; 00007fffH
; Line 237
	jmp	$LL11@grphput_in
$LN19@grphput_in:
; Line 238
	mov	QWORD PTR [r15], rsi
; Line 239
	mov	DWORD PTR [r15+8], r11d
; Line 240
	xor	eax, eax
	jmp	SHORT $LN13@grphput_in
$LN18@grphput_in:
; Line 225
	mov	eax, 1
$LN13@grphput_in:
; Line 241
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 16
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
grphput_indirty1 ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grphput_indirty0 DD imagerel grphput_indirty0
	DD	imagerel grphput_indirty0+458
	DD	imagerel $unwind$grphput_indirty0
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grphput_indirty0 DD 0c2101H
	DD	0b6421H
	DD	0a5421H
	DD	093421H
	DD	0f01d1221H
	DD	0d019e01bH
	DD	07015c017H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT grphput_indirty0
_TEXT	SEGMENT
mg$ = 0
mkgrph$ = 64
gpos$ = 72
grphput_indirty0 PROC					; COMDAT
; Line 131
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 16
; Line 142
	mov	rbp, QWORD PTR [rcx+8]
	mov	rsi, QWORD PTR [rcx]
; Line 146
	movzx	r13d, BYTE PTR gdc+356
	movsxd	r8, edx
	mov	r15, rcx
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, WORD PTR gdc[r8+rcx+340]
	movzx	r12d, WORD PTR gdc[r8+rcx+342]
	mov	QWORD PTR mg$[rsp+8], rbp
	and	eax, 16383				; 00003fffH
	lea	ebx, DWORD PTR [rax+rax]
; Line 147
	bt	r12d, 14
	jb	SHORT $LN12@grphput_in@2
; Line 148
	add	r13d, r13d
$LN12@grphput_in@2:
; Line 152
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r11d, DWORD PTR mg$[rsp+8]
	shr	r12d, 4
	and	r12d, 1023				; 000003ffH
	and	r13d, 254				; 000000feH
	shr	rbp, 32					; 00000020H
$LL11@grphput_in@2:
; Line 154
	test	r11b, 1
	je	SHORT $LN8@grphput_in@2
	test	BYTE PTR gdc+656, 16
	jne	$LN5@grphput_in@2
$LN8@grphput_in@2:
	mov	r14, QWORD PTR mem
; Line 155
	mov	r9d, ebx
; Line 156
	mov	r10, rsi
; Line 157
	lea	rdi, QWORD PTR [rsi+640]
	lea	r15, OFFSET FLAT:__ImageBase
$LL7@grphput_in@2:
; Line 159
	mov	eax, r9d
	test	BYTE PTR vramupdate[rax+r15], 1
	je	$LN4@grphput_in@2
; Line 160
	mov	eax, r11d
	or	BYTE PTR renewal_line[rax+r15], 1
; Line 161
	lea	eax, DWORD PTR [r9+688128]
	movzx	eax, BYTE PTR [rax+r14]
	mov	ecx, DWORD PTR grph_table[r15+rax*8]
	mov	edx, DWORD PTR grph_table[r15+rax*8+4]
	lea	eax, DWORD PTR [r9+720896]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+2052]
	add	ecx, DWORD PTR grph_table[r15+rax*8+2048]
	lea	eax, DWORD PTR [r9+753664]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+4100]
	add	ecx, DWORD PTR grph_table[r15+rax*8+4096]
	lea	eax, DWORD PTR [r9+917504]
	movzx	eax, BYTE PTR [rax+r14]
	add	edx, DWORD PTR grph_table[r15+rax*8+6148]
	mov	eax, DWORD PTR grph_table[r15+rax*8+6144]
	add	ecx, eax
	mov	DWORD PTR [r10+4], edx
	mov	DWORD PTR [r10], ecx
$LN4@grphput_in@2:
; Line 163
	inc	r9d
; Line 164
	add	r10, 8
	and	r9d, 32767				; 00007fffH
; Line 165
	cmp	r10, rdi
	jb	$LL7@grphput_in@2
	mov	r14d, DWORD PTR mg$[rsp+12]
	mov	r15, QWORD PTR mkgrph$[rsp]
$LN5@grphput_in@2:
; Line 167
	inc	r11d
; Line 168
	cmp	r11d, DWORD PTR dsync+12
	jae	SHORT $LN18@grphput_in@2
; Line 171
	add	rsi, 640				; 00000280H
; Line 172
	dec	r12d
; Line 173
	je	SHORT $LN19@grphput_in@2
; Line 176
	dec	ebp
; Line 177
	jne	$LL11@grphput_in@2
; Line 179
	add	ebx, r13d
	mov	ebp, r14d
	and	ebx, 32767				; 00007fffH
; Line 181
	jmp	$LL11@grphput_in@2
$LN19@grphput_in@2:
; Line 182
	mov	QWORD PTR [r15], rsi
; Line 183
	mov	DWORD PTR [r15+8], r11d
; Line 184
	xor	eax, eax
	jmp	SHORT $LN13@grphput_in@2
$LN18@grphput_in@2:
; Line 169
	mov	eax, 1
$LN13@grphput_in@2:
; Line 185
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 16
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
grphput_indirty0 ENDP
_TEXT	ENDS
PUBLIC	makegrph_initialize
; Function compile flags: /Ogtpy
;	COMDAT makegrph_initialize
_TEXT	SEGMENT
makegrph_initialize PROC				; COMDAT
; Line 30
	xor	eax, eax
	lea	rdx, OFFSET FLAT:grph_table+2052
; Line 31
	mov	r8d, eax
	npad	4
$LL17@makegrph_i:
; Line 33
	mov	cl, 1
$LL14@makegrph_i:
; Line 38
	shl	eax, 8
; Line 39
	test	cl, r8b
	je	SHORT $LN13@makegrph_i
; Line 40
	inc	eax
$LN13@makegrph_i:
; Line 33
	add	cl, cl
	cmp	cl, 16
	jb	SHORT $LL14@makegrph_i
; Line 44
	mov	DWORD PTR [rdx-2048], eax
	add	eax, eax
	mov	DWORD PTR [rdx], eax
	add	eax, eax
	mov	DWORD PTR [rdx+2048], eax
	add	eax, eax
	mov	DWORD PTR [rdx+4096], eax
	add	eax, eax
; Line 47
	test	cl, cl
	je	SHORT $LN5@makegrph_i
$LL7@makegrph_i:
; Line 52
	shl	eax, 8
; Line 53
	test	cl, r8b
	je	SHORT $LN6@makegrph_i
; Line 54
	inc	eax
$LN6@makegrph_i:
; Line 47
	add	cl, cl
	jne	SHORT $LL7@makegrph_i
$LN5@makegrph_i:
; Line 58
	mov	DWORD PTR [rdx-2052], eax
	add	eax, eax
	inc	r8d
	mov	DWORD PTR [rdx-4], eax
	add	eax, eax
	add	rdx, 8
	mov	DWORD PTR [rdx+2036], eax
	add	eax, eax
	mov	DWORD PTR [rdx+4084], eax
	add	eax, eax
	cmp	r8d, 256				; 00000100H
	jl	SHORT $LL17@makegrph_i
; Line 61
	fatret	0
makegrph_initialize ENDP
_TEXT	ENDS
PUBLIC	makegrph
;	COMDAT pdata
pdata	SEGMENT
$pdata$makegrph DD imagerel $LN74
	DD	imagerel $LN74+523
	DD	imagerel $unwind$makegrph
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$makegrph DD 020901H
	DD	050025209H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT makegrph
_TEXT	SEGMENT
mg$ = 32
page$ = 64
alldraw$ = 72
makegrph PROC						; COMDAT
; Line 351
$LN74:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 48					; 00000030H
; Line 361
	movzx	eax, BYTE PTR gdc+337
	and	eax, 31
	inc	eax
	mov	DWORD PTR mg$[rbp-36], eax
; Line 362
	mov	eax, DWORD PTR dsync+8
	mov	DWORD PTR mg$[rbp-40], eax
; Line 365
	mov	eax, DWORD PTR dsync+36
	test	ecx, ecx
	jne	$LN40@makegrph
	lea	rcx, OFFSET FLAT:np2_vram
	add	rax, rcx
; Line 368
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	QWORD PTR mg$[rbp-48], rax
	test	edx, edx
	jne	SHORT $LN49@makegrph
	call	grphput_indirty0
	test	eax, eax
	jne	$LN58@makegrph
$LL38@makegrph:
; Line 371
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	edx, 4
	call	grphput_indirty0
	test	eax, eax
	jne	$LN58@makegrph
; Line 374
	cmp	BYTE PTR np2cfg, al
	jne	SHORT $LN32@makegrph
; Line 377
	lea	edx, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_indirty0
	test	eax, eax
	jne	$LN58@makegrph
; Line 380
	lea	edx, QWORD PTR [rax+12]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_indirty0
	test	eax, eax
	jne	SHORT $LN58@makegrph
$LN32@makegrph:
; Line 368
	lea	rcx, QWORD PTR mg$[rbp-48]
	xor	edx, edx
	call	grphput_indirty0
	test	eax, eax
	je	SHORT $LL38@makegrph
; Line 385
	jmp	SHORT $LN58@makegrph
$LN49@makegrph:
; Line 387
	xor	edx, edx
	call	grphput_all0
	test	eax, eax
	jne	SHORT $LN58@makegrph
$LL30@makegrph:
; Line 390
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	edx, 4
	call	grphput_all0
	test	eax, eax
	jne	SHORT $LN58@makegrph
; Line 393
	cmp	BYTE PTR np2cfg, al
	jne	SHORT $LN24@makegrph
; Line 396
	lea	edx, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_all0
	test	eax, eax
	jne	SHORT $LN58@makegrph
; Line 399
	lea	edx, QWORD PTR [rax+12]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_all0
	test	eax, eax
	jne	SHORT $LN58@makegrph
$LN24@makegrph:
; Line 387
	lea	rcx, QWORD PTR mg$[rbp-48]
	xor	edx, edx
	call	grphput_all0
	test	eax, eax
	je	SHORT $LL30@makegrph
$LN58@makegrph:
	xor	eax, eax
	lea	rcx, OFFSET FLAT:vramupdate
$LL23@makegrph:
; Line 405
	and	DWORD PTR [rax+rcx], -16843010		; fefefefeH
	add	rax, 4
	cmp	rax, 32768				; 00008000H
	jl	SHORT $LL23@makegrph
; Line 452
	add	rsp, 48					; 00000030H
	pop	rbp
	ret	0
$LN40@makegrph:
; Line 409
	lea	rcx, OFFSET FLAT:np2_vram+307200
	add	rax, rcx
; Line 412
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	QWORD PTR mg$[rbp-48], rax
	test	edx, edx
	jne	SHORT $LN52@makegrph
	call	grphput_indirty1
	test	eax, eax
	jne	$LN66@makegrph
	npad	2
$LL18@makegrph:
; Line 415
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	edx, 4
	call	grphput_indirty1
	test	eax, eax
	jne	$LN66@makegrph
; Line 418
	cmp	BYTE PTR np2cfg, al
	jne	SHORT $LN12@makegrph
; Line 421
	lea	edx, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_indirty1
	test	eax, eax
	jne	SHORT $LN66@makegrph
; Line 424
	lea	edx, QWORD PTR [rax+12]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_indirty1
	test	eax, eax
	jne	SHORT $LN66@makegrph
$LN12@makegrph:
; Line 412
	lea	rcx, QWORD PTR mg$[rbp-48]
	xor	edx, edx
	call	grphput_indirty1
	test	eax, eax
	je	SHORT $LL18@makegrph
; Line 429
	jmp	SHORT $LN66@makegrph
$LN52@makegrph:
; Line 431
	xor	edx, edx
	call	grphput_all1
	test	eax, eax
	jne	SHORT $LN66@makegrph
	npad	6
$LL10@makegrph:
; Line 434
	lea	rcx, QWORD PTR mg$[rbp-48]
	mov	edx, 4
	call	grphput_all1
	test	eax, eax
	jne	SHORT $LN66@makegrph
; Line 437
	cmp	BYTE PTR np2cfg, al
	jne	SHORT $LN4@makegrph
; Line 440
	lea	edx, QWORD PTR [rax+8]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_all1
	test	eax, eax
	jne	SHORT $LN66@makegrph
; Line 443
	lea	edx, QWORD PTR [rax+12]
	lea	rcx, QWORD PTR mg$[rbp-48]
	call	grphput_all1
	test	eax, eax
	jne	SHORT $LN66@makegrph
$LN4@makegrph:
; Line 431
	lea	rcx, QWORD PTR mg$[rbp-48]
	xor	edx, edx
	call	grphput_all1
	test	eax, eax
	je	SHORT $LL10@makegrph
$LN66@makegrph:
	xor	eax, eax
	lea	rcx, OFFSET FLAT:vramupdate
$LL3@makegrph:
; Line 449
	and	DWORD PTR [rax+rcx], -33686019		; fdfdfdfdH
	add	rax, 4
	cmp	rax, 32768				; 00008000H
	jl	SHORT $LL3@makegrph
; Line 452
	add	rsp, 48					; 00000030H
	pop	rbp
	ret	0
makegrph ENDP
_TEXT	ENDS
END
